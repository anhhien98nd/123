-- Auto Spam M2 (standalone)
-- Bật sau 13.5s, chạy 3s, rồi tắt. Không cần code gốc / GUI.

local START_DELAY   = 13      -- chờ trước khi bật (giây)
local ACTIVE_TIME   = 22      -- giữ bật (giây)
local FIRE_INTERVAL = 0.65   -- khoảng giữa mỗi lần gửi (giây)

-- Tìm remote: ReplicatedStorage → BridgeNet2 → dataRemoteEvent
local remote
pcall(function()
	local rs = game:GetService("ReplicatedStorage")
	local bridge = rs:FindFirstChild("BridgeNet2")
	if bridge then
		remote = bridge:FindFirstChild("dataRemoteEvent")
	end
	-- fallback: tìm descendant có tên "dataRemoteEvent"
	if not remote then
		for _, v in ipairs(rs:GetDescendants()) do
			if v.Name == "dataRemoteEvent" then
				remote = v
				break
			end
		end
	end
end)

-- Thiết lập bf(): ưu tiên buffer.fromstring nếu có, fallback trả chuỗi
local bf
if type(buffer) == "table" and type(buffer.fromstring) == "function" then
	bf = buffer.fromstring
else
	bf = function(s) return s end
end

-- Payload Spam M2 (giữ nguyên từ code gốc)
local payload_str = "\019\000\000\0000201100101186595482\000"

-- Hàm gửi an toàn
local function safeFire()
	if remote and bf then
		pcall(function()
			remote:FireServer({ { bf(payload_str) }, "\019" })
		end)
	else
		if not safeFire._warned then
			safeFire._warned = true
			warn("[Auto Spam M2] remote hoặc bf không khả dụng; không gửi được.")
		end
	end
end

-- Main
task.spawn(function()
	task.wait(START_DELAY)
	print("[Auto Spam M2] ON")
	local t0 = tick()
	local running = true

	task.spawn(function()
		while running and tick() - t0 < ACTIVE_TIME do
			safeFire()
			task.wait(FIRE_INTERVAL)
		end
	end)

	task.wait(ACTIVE_TIME)
	running = false
	print("[Auto Spam M2] OFF")
end)
