-- Auto Spam M1 (multi schedule, standalone)
-- Mỗi entry trong schedule: {start_time, duration}
-- => start_time: thời điểm bắt đầu (tính từ lúc script bắt đầu)
-- => duration: thời gian hoạt động (giây)

local FIRE_INTERVAL = 0.4 -- khoảng giữa mỗi lần gửi (giây)

-- Các lần Spam M1
local schedule = {
    {62, 65},  -- bắt đầu 62s, chạy 65s  → kết thúc 127s
    {74, 77},  -- bắt đầu 74s, chạy 77s  → kết thúc 151s
    {86, 89},  -- bắt đầu 86s, chạy 89s  → kết thúc 175s
}

-- Tìm remote: ReplicatedStorage → BridgeNet2 → dataRemoteEvent
local remote
pcall(function()
    local rs = game:GetService("ReplicatedStorage")
    local bridge = rs:FindFirstChild("BridgeNet2")
    if bridge then
        remote = bridge:FindFirstChild("dataRemoteEvent")
    end
    if not remote then
        for _, v in ipairs(rs:GetDescendants()) do
            if v.Name == "dataRemoteEvent" then
                remote = v
                break
            end
        end
    end
end)

-- buffer handler
local bf
if type(buffer) == "table" and type(buffer.fromstring) == "function" then
    bf = buffer.fromstring
else
    bf = function(s) return s end
end

local payload_str = "\019\000\000\0000201000113686372022\000"

local function safeFire()
    if remote and bf then
        pcall(function()
            remote:FireServer({ { bf(payload_str) }, "\019" })
        end)
    else
        if not safeFire._warned then
            safeFire._warned = true
            warn("[Auto Spam M1] remote hoặc bf không khả dụng; không gửi được.")
        end
    end
end

-- Chạy từng schedule
local tick0 = tick()

for i, window in ipairs(schedule) do
    local start_time, duration = window[1], window[2]
    if type(start_time) == "number" and type(duration) == "number" and duration > 0 then
        task.spawn(function()
            -- đợi tới thời điểm bắt đầu
            local wait_time = tick0 + start_time - tick()
            if wait_time > 0 then task.wait(wait_time) end

            local end_time = tick0 + start_time + duration
            print(("[Auto Spam M1] #%d ON (%.1fs -> %.1fs)"):format(i, start_time, start_time + duration))

            -- spam trong khoảng thời gian hoạt động
            while tick() < end_time do
                safeFire()
                task.wait(FIRE_INTERVAL)
            end

            print(("[Auto Spam M1] #%d OFF (kết thúc %.1fs)"):format(i, start_time + duration))
        end)
    else
        warn(("[Auto Spam M1] Schedule #%d không hợp lệ (start=%s, duration=%s)"):format(i, tostring(start_time), tostring(duration)))
    end
end
