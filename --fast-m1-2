-- Auto Fast M1 (multi-schedule, standalone)
-- Mỗi entry trong schedule = {start_seconds, end_seconds} (tính từ lúc script bắt đầu)
-- Ví dụ: {13, 54} => bật từ 13s đến 54s (chạy 41 giây)

local FIRE_INTERVAL = 0.1 -- khoảng cách giữa mỗi lần gửi (giây)

-- lịch hoạt động (thời điểm bắt đầu và tắt)
local schedule = {
    {13, 53},  -- bật lúc 13s, tắt lúc 56s  
    {127, 131},  -- bật lúc 101s, tắt lúc 105s  
}

-- tìm remote: ReplicatedStorage -> BridgeNet2 -> dataRemoteEvent (fallback tìm descendants)
local remote
pcall(function()
    local rs = game:GetService("ReplicatedStorage")
    local bridge = rs:FindFirstChild("BridgeNet2")
    if bridge then
        remote = bridge:FindFirstChild("dataRemoteEvent")
    end
    if not remote then
        for _, v in ipairs(rs:GetDescendants()) do
            if v.Name == "dataRemoteEvent" then
                remote = v
                break
            end
        end
    end
end)

-- bf(): ưu tiên buffer.fromstring nếu có, fallback trả chuỗi thô
local bf
if type(buffer) == "table" and type(buffer.fromstring) == "function" then
    bf = buffer.fromstring
else
    bf = function(s) return s end
end

local payload_str = "\019\000\000\0000201000113686372022\000"

local function safeFire()
    if remote and bf then
        pcall(function()
            remote:FireServer({ { bf(payload_str) }, "\019" })
        end)
    else
        if not safeFire._warned then
            safeFire._warned = true
            warn("[Auto Fast M1] remote hoặc bf không khả dụng; không gửi được.")
        end
    end
end

-- scheduling
local tick0 = tick()

for i, win in ipairs(schedule) do
    local startSec, endSec = win[1], win[2]
    local duration = endSec - startSec

    if type(startSec) ~= "number" or type(endSec) ~= "number" or duration <= 0 then
        warn(("[Auto Fast M1] Schedule #%d không hợp lệ (start=%s, end=%s) — bỏ qua"):format(i, tostring(startSec), tostring(endSec)))
    else
        task.spawn(function()
            local startTime = tick0 + startSec
            local endTime = tick0 + endSec

            -- chờ tới lúc bắt đầu
            local toWait = startTime - tick()
            if toWait > 0 then task.wait(toWait) end

            if tick() >= endTime then
                warn(("[Auto Fast M1] Schedule #%d đã trôi qua — bỏ qua"):format(i))
                return
            end

            print(("[Auto Fast M1] #%d ON (%.1fs -> %.1fs)"):format(i, startSec, endSec))

            while tick() < endTime do
                safeFire()
                task.wait(FIRE_INTERVAL)
            end

            print(("[Auto Fast M1] #%d OFF (%.1fs)"):format(i, endSec))
        end)
    end
end
